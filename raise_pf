# gives the user their cards and position, and asks if they should open raise (assuming the action has folded around to them)
def raise_pf():
    possible_cards = cards
    card1 = random.choice(possible_cards)
    possible_cards.remove(card1)
    card2 = random.choice(possible_cards)
    position = random.choice(positions)
    print("Your cards: \n")
    print(name(card1) + "\n")
    print(name(card2) + "\n")
    print("Your position: \n")
    print(position[0] + " (" + position[1] + " after the BB)")
    # pre-flop
    # no raises
    rows = 13
    cols = 13
    utg_range = hj_range = co_range = bu_range = sb_range = [[0 for _ in range(rows)] for _ in range(cols)]
    #1st = row, 2nd = col

    #make UTG range
    for i in range(3):
        for j in range(5):
            utg_range[i][j] = hj_range[i][j] = co_range[i][j] = bu_range[i][j] = sb_range[i][j] = 1
    utg_range[3][0] = utg_range[3][3] = utg_range[3][4] = utg_range[4][4] = utg_range[4][5] = utg_range[5][5] = utg_range[6][6] = utg_range[7][7] = 1

    for i in range(13):
        hj_range[0][i] = co_range[0][i] = bu_range[0][i] = sb_range[0][i] = 1
        #fills in first row, all suited aces

    #makes pocket pairs, etc.
    for i in range(3, 9):
        hj_range[i][i] = co_range[i][i] = bu_range[i][i] = sb_range[i][i] = 1

    #make HJ range
    hj_range[3][0] = hj_range[3][1] = hj_range[3][4] = hj_range[4][0] = hj_range[4][5] = hj_range[5][6] = 1

    #make CO/BU/SB pocket pairs
    for i in range(9, 13):
        co_range[i][i] = bu_range[i][i] = sb_range[i][i] = 1

    #make CO range
    for i in range(5):
        for j in range(6):
            co_range[i][i] = 1
    co_range[1][6] = co_range[4][6] = co_range[5][0] = co_range[5][4] = co_range[5][6] = co_range[5][7] = co_range[6][7] = co_range[7][8] = 1

    #make BU range
    for i in range(3):
        for j in range(13):
            bu_range[i][j] = 1
    for i in range(3, 7):
        for j in range(9):
            bu_range[i][j] = 1
    for i in range(7, 13):
        bu_range[i][0] = 1
    bu_range[7][6] = bu_range[7][8] = bu_range[7][9] = bu_range[8][9] = bu_range[8][10] = bu_range[9][10] = bu_range[9][11] = bu_range[10][11] = bu_range[11][12] = 1

    #make SB range
    for i in range(2):
        for j in range(13):
            sb_range[i][j] = 1
    for i in range(13):
        sb_range[i][0] = 1
    for i in range(6):
        for j in range(8):
            sb_range[i][j] = 1
    for j in range(4, 9):
        sb_range[6][j] = 1
    for j in range(6, 10):
        sb_range[7][j] = 1
    sb_range[8][9] = sb_range[9][10] = sb_range[10][11] = 1


    a, b = indices(card1, card2)
    decision = input("Your move? (raise/fold) \n")

    if (position[1] == "1"):
        if utg_range[a][b]:
            print("raise")
        else:
            print("fold")
    elif (position[1] == "2"):
        if hj_range[a][b]:
            print("raise")
        else:
            print("fold")
    elif (position[1] == "3"):
        if co_range[a][b]:
            print("raise")
        else:
            print("fold")
    elif(position[1] == "4"):
        if bu_range[a][b]:
            print("raise")
        else:
            print("fold")
    else:
        if sb_range[a][b]:
            print("raise")
        else:
            print("fold")
